definitions:
  dtos.TodoDTO:
    properties:
      description:
        type: string
      scheduled:
        type: boolean
      scheduled_to:
        type: string
      title:
        type: string
    required:
    - description
    - title
    type: object
  models.Todo:
    properties:
      completed:
        type: boolean
      completed_at:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      scheduled:
        type: boolean
      scheduled_to:
        type: string
      title:
        type: string
    type: object
info:
  contact: {}
paths:
  /:
    get:
      consumes:
      - application/json
      description: Main entry point
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: HelloWorld
      tags:
      - health
  /health:
    get:
      consumes:
      - application/json
      description: Check if the server is healthy
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Health check
      tags:
      - health
  /todo:
    post:
      consumes:
      - application/json
      description: Create a new todo
      parameters:
      - description: Todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dtos.TodoDTO'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Todo'
      summary: Create a new todo
      tags:
      - todo
  /todo/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a todo by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      responses:
        "204":
          description: No Content
      summary: Delete a todo by ID
      tags:
      - todo
    get:
      consumes:
      - application/json
      description: Get a todo by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Todo'
      summary: Get a todo by ID
      tags:
      - todo
    put:
      consumes:
      - application/json
      description: Update a todo by ID
      parameters:
      - description: Todo ID
        in: path
        name: id
        required: true
        type: string
      - description: Todo object
        in: body
        name: todo
        required: true
        schema:
          $ref: '#/definitions/dtos.TodoDTO'
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/models.Todo'
      summary: Update a todo by ID
      tags:
      - todo
  /todos:
    get:
      consumes:
      - application/json
      description: Get all todos
      parameters:
      - default: 10
        description: Limit
        in: query
        name: limit
        type: integer
      - default: 0
        description: Offset
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Todo'
            type: array
      summary: Get all todos
      tags:
      - todo
swagger: "2.0"
